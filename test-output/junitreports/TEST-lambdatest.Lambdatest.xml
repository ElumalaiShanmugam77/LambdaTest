<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="Deepika" failures="0" tests="16" name="lambdatest.Lambdatest" time="1.017" errors="4" timestamp="2023-07-06T21:04:24 IST" skipped="12">
  <testcase classname="lambdatest.Lambdatest" name="setUp" time="0.932">
    <error message="Could not start a new session. Response code 400. Message: You might be using selenium 4, please refer to capability generator https://www.lambdatest.com/capabilities-generator for selenium 4 capabilities or contact support 
Host info: host: &#039;DEEPIKA&#039;, ip: &#039;192.168.1.4&#039;
Build info: version: &#039;4.10.0&#039;, revision: &#039;c14d967899&#039;
System info: os.name: &#039;Windows 11&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;17.0.5&#039;
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, browserVersion: 88.0, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}, platformName: Windows 10}]}]
Capabilities {browserName: chrome, browserVersion: 88.0, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}, platformName: Windows 10}" type="org.openqa.selenium.SessionNotCreatedException">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 400. Message: You might be using selenium 4, please refer to capability generator https://www.lambdatest.com/capabilities-generator for selenium 4 capabilities or contact support 
Host info: host: 'DEEPIKA', ip: '192.168.1.4'
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.5'
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, browserVersion: 88.0, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}, platformName: Windows 10}]}]
Capabilities {browserName: chrome, browserVersion: 88.0, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}, platformName: Windows 10}
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:140)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:96)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:68)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:163)
at org.openqa.selenium.remote.TracedCommandExecutor.execute(TracedCommandExecutor.java:51)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:227)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:154)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:134)
at lambdatest.Lambdatest.setUp(Lambdatest.java:51)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
    </error>
  </testcase> <!-- setUp -->
  <system-out/>
  <testcase classname="lambdatest.Lambdatest" name="setUp" time="0.000">
    <error message="Invalid browser name: internet explorer" type="java.lang.IllegalArgumentException">
      <![CDATA[java.lang.IllegalArgumentException: Invalid browser name: internet explorer
at lambdatest.Lambdatest.setUp(Lambdatest.java:42)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
    </error>
  </testcase> <!-- setUp -->
  <system-out/>
  <testcase classname="lambdatest.Lambdatest" name="setUp" time="0.044">
    <error message="Could not start a new session. Response code 400. Message: You might be using selenium 4, please refer to capability generator https://www.lambdatest.com/capabilities-generator for selenium 4 capabilities or contact support 
Host info: host: &#039;DEEPIKA&#039;, ip: &#039;192.168.1.4&#039;
Build info: version: &#039;4.10.0&#039;, revision: &#039;c14d967899&#039;
System info: os.name: &#039;Windows 11&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;17.0.5&#039;
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: MicrosoftEdge, browserVersion: 87.0, ms:edgeOptions: {args: [--remote-allow-origins=*], extensions: []}, platformName: macOS Sierra}]}]
Capabilities {browserName: MicrosoftEdge, browserVersion: 87.0, ms:edgeOptions: {args: [--remote-allow-origins=*], extensions: []}, platformName: macOS Sierra}" type="org.openqa.selenium.SessionNotCreatedException">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 400. Message: You might be using selenium 4, please refer to capability generator https://www.lambdatest.com/capabilities-generator for selenium 4 capabilities or contact support 
Host info: host: 'DEEPIKA', ip: '192.168.1.4'
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.5'
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: MicrosoftEdge, browserVersion: 87.0, ms:edgeOptions: {args: [--remote-allow-origins=*], extensions: []}, platformName: macOS Sierra}]}]
Capabilities {browserName: MicrosoftEdge, browserVersion: 87.0, ms:edgeOptions: {args: [--remote-allow-origins=*], extensions: []}, platformName: macOS Sierra}
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:140)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:96)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:68)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:163)
at org.openqa.selenium.remote.TracedCommandExecutor.execute(TracedCommandExecutor.java:51)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:227)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:154)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:134)
at lambdatest.Lambdatest.setUp(Lambdatest.java:51)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
    </error>
  </testcase> <!-- setUp -->
  <system-out/>
  <testcase classname="lambdatest.Lambdatest" name="setUp" time="0.041">
    <error message="Could not start a new session. Response code 400. Message: You might be using selenium 4, please refer to capability generator https://www.lambdatest.com/capabilities-generator for selenium 4 capabilities or contact support 
Host info: host: &#039;DEEPIKA&#039;, ip: &#039;192.168.1.4&#039;
Build info: version: &#039;4.10.0&#039;, revision: &#039;c14d967899&#039;
System info: os.name: &#039;Windows 11&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;17.0.5&#039;
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Command: [null, newSession {capabilities=[Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 82.0, moz:debuggerAddress: true, moz:firefoxOptions: {}, platformName: Windows 7}]}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 82.0, moz:debuggerAddress: true, moz:firefoxOptions: {}, platformName: Windows 7}" type="org.openqa.selenium.SessionNotCreatedException">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 400. Message: You might be using selenium 4, please refer to capability generator https://www.lambdatest.com/capabilities-generator for selenium 4 capabilities or contact support 
Host info: host: 'DEEPIKA', ip: '192.168.1.4'
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.5'
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Command: [null, newSession {capabilities=[Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 82.0, moz:debuggerAddress: true, moz:firefoxOptions: {}, platformName: Windows 7}]}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 82.0, moz:debuggerAddress: true, moz:firefoxOptions: {}, platformName: Windows 7}
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:140)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:96)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:68)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:163)
at org.openqa.selenium.remote.TracedCommandExecutor.execute(TracedCommandExecutor.java:51)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:227)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:154)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:134)
at lambdatest.Lambdatest.setUp(Lambdatest.java:51)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
    </error>
  </testcase> <!-- setUp -->
  <system-out/>
  <testcase classname="lambdatest.Lambdatest" name="testScenario1" time="0.000">
    <skipped/>
  </testcase> <!-- testScenario1 -->
  <system-out/>
  <testcase classname="lambdatest.Lambdatest" name="testScenario1" time="0.000">
    <skipped/>
  </testcase> <!-- testScenario1 -->
  <system-out/>
  <testcase classname="lambdatest.Lambdatest" name="testScenario1" time="0.000">
    <skipped/>
  </testcase> <!-- testScenario1 -->
  <system-out/>
  <testcase classname="lambdatest.Lambdatest" name="testScenario1" time="0.000">
    <skipped/>
  </testcase> <!-- testScenario1 -->
  <system-out/>
  <testcase classname="lambdatest.Lambdatest" name="testScenario2" time="0.000">
    <skipped/>
  </testcase> <!-- testScenario2 -->
  <system-out/>
  <testcase classname="lambdatest.Lambdatest" name="testScenario2" time="0.000">
    <skipped/>
  </testcase> <!-- testScenario2 -->
  <system-out/>
  <testcase classname="lambdatest.Lambdatest" name="testScenario2" time="0.000">
    <skipped/>
  </testcase> <!-- testScenario2 -->
  <system-out/>
  <testcase classname="lambdatest.Lambdatest" name="testScenario2" time="0.000">
    <skipped/>
  </testcase> <!-- testScenario2 -->
  <system-out/>
  <testcase classname="lambdatest.Lambdatest" name="testScenario3" time="0.000">
    <skipped/>
  </testcase> <!-- testScenario3 -->
  <system-out/>
  <testcase classname="lambdatest.Lambdatest" name="testScenario3" time="0.000">
    <skipped/>
  </testcase> <!-- testScenario3 -->
  <system-out/>
  <testcase classname="lambdatest.Lambdatest" name="testScenario3" time="0.000">
    <skipped/>
  </testcase> <!-- testScenario3 -->
  <system-out/>
  <testcase classname="lambdatest.Lambdatest" name="testScenario3" time="0.000">
    <skipped/>
  </testcase> <!-- testScenario3 -->
  <system-out/>
</testsuite> <!-- lambdatest.Lambdatest -->
